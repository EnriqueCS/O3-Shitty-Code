`timescale 1ns / 1ps

module register_file(
    input            clk,
    input            write_enable,
    input  [4:0]     write_address, // 5-bit, selects which register to write
    input  [31:0]    write_data,    // 32-bit data to write

    input  [4:0]     read_address_1, // 5-bit, selects register for read port 1
    output reg [31:0] read_data_1,   // 32-bit output from read port 1

    input  [4:0]     read_address_2, // 5-bit, selects register for read port 2
    output reg [31:0] read_data_2    // 32-bit output from read port 2
);

    // 32 x 32-bit register file
    reg [31:0] reg_file [31:0];

    // Combinational read
    always @(*) begin
        read_data_1 = reg_file[read_address_1];
        read_data_2 = reg_file[read_address_2];
    end

    // Synchronous write
    always @(posedge clk) begin
        if (write_enable) begin
            // For RISC-V style, register x0 is always zero
            // => Ignore writes to address 0
            if (write_address != 5'b00000) begin
                reg_file[write_address] <= write_data;
            end
        end
    end

endmodule
